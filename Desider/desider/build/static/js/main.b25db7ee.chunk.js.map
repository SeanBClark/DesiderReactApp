{"version":3,"sources":["Style/DesiderIcon/Desider_Icon.svg","Style/DesiderIcon/Icon.jsx","NavBar/Desktop.jsx","NavBar/Mobile.jsx","NavBar/NavBar.jsx","Style/LoadingAnimations/TailSpin.jsx","Map/MapContainer.jsx","Restaurant/RestaurantRender.jsx","Restaurant/Desktop.jsx","Restaurant/Mobile.jsx","Restaurant/Restaurant.jsx","Recipe/RecipeRender.jsx","Recipe/Desktop.jsx","Recipe/Mobile.jsx","Recipe/Recipe.jsx","Book/BookRender.jsx","Book/Desktop.jsx","Book/Mobile.jsx","Book/Book.jsx","Movie/MovieRender.jsx","Movie/Desktop.jsx","Movie/Mobile.jsx","Movie/Movie.jsx","Options/OptionsDesktop.jsx","Options/OptionsMobile.jsx","Options/Options.jsx","Footer/Desktop.jsx","Footer/Mobile.jsx","Footer/Footer.jsx","App/Desktop.jsx","App/Mobile.jsx","App/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Icon","props","state","alt","src","DesiderIcon","Component","Desktop","className","href","Mobile","NavBar","minDeviceWidth","values","deviceWidth","maxDeviceWidth","TailSpin","type","color","height","width","MapContainer","labelText","this","label","mapStyles","google","zoom","style","initialCenter","lat","latitude","lng","longitude","position","GoogleApiWrapper","apiKey","RestaurantRender","result","loaded","photo","photoSRC","setState","concat","data","photoDetails","photos","photoRef","photo_reference","photoURL","map","item","key","id","name","vicinity","rating","user_ratings_total","types","index","replace","geometry","location","GoogleAPI","placeholder","getRestaurant","bind","console","log","fetch","then","response","status","json","results","choiceResult","sort","Math","random","find","ReactDOM","render","floor","document","getElementById","onClick","Restaurant","success","error","coords","navigator","options","enableHighAccuracy","geolocation","getCurrentPosition","RecipeRender","test_data","recipes","detailsRender","detailInstructions","url","showDetailedInstructions","catch","prevState","recipe","sourceName","sourceUrl","split","summary","basicInstructions","instructions","title","image","vegetarian","vegan","glutenFree","dairyFree","sustainable","cheap","extendedIngredients","ing","original","analyzedInstructions","inst","steps","step","number","equipment","length","ingredients","getRecipe","Recipe","BookRender","randomNum","items","book","volumeInfo","authors","author","publisher","imageLinks","thumbnail","description","averageRating","previewLink","saleInfo","buyLink","getBook","Book","movie","rand","poster_path","overview","vote_average","vote_count","getMovie","MovieRender","desc","homeURL","recipeURL","bookURL","restaurantURL","movieURL","to","path","component","Movie","optionsVisible","hideOptions","showOptions","Options","TheMovieDB","Footer","App","Boolean","window","hostname","match","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b25db7ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Desider_Icon.a7bc7193.svg\";","import React, { Component } from 'react';\nimport DesiderIcon from './Desider_Icon.svg';\n\nclass Icon extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <img alt = 'Icon for Desider' src = { DesiderIcon }></img>\n\n        );   \n\n    }\n\n}\n\nexport default Icon;","import React, { Component } from \"react\";\nimport Icon from '../Style/DesiderIcon/Icon.jsx';\nimport './Desktop.scss';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'nav-bar-div'>\n\n                <a href = '/#'>\n\n                    <div className = 'desider-icon-div'>\n\n                        <Icon />\n\n                    </div>\n\n                </a>\n\n                {/* <div className = 'nav-options-div'>\n\n                    <div className = 'home-btn-div nav-btn'>\n\n                        Home\n\n                    </div>\n\n                    <div className = 'contact-btn-div nav-btn'>\n\n                        Contact\n\n                    </div>\n\n                    <div className = 'login-btn-div nav-btn'>\n\n                        Log into Account\n\n                    </div>\n\n                </div> */}\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;","import React, { Component } from \"react\";\nimport Icon from '../Style/DesiderIcon/Icon.jsx';\nimport './Mobile.scss';\n\nclass Mobile extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <a href = '/#'>\n\n                    <div className = 'desider-icon-div'>\n\n                        <Icon />\n\n                    </div>\n\n                </a>\n\n                <div className = 'nav-options-div'>\n\n                    <div className = 'home-btn-div nav-btn'>\n\n                        Home\n\n                    </div>\n\n                    <div className = 'login-btn-div-mb nav-btn'>\n\n                        Log into Account\n\n                    </div>\n\n                    <div className = 'contact-btn-div nav-btn'>\n\n                        Contact\n\n                    </div>\n\n                </div>\n\n            </div>\n\n            // <div className = 'nav-bar-div'>\n\n            //     <div className = 'desider-icon-div'>\n\n            //         <Icon />\n                    \n            //     </div>\n\n                // <div className = 'nav-options-div'>\n\n                //     <div className = 'home-btn-div nav-btn'>\n\n                //         Home\n\n                //     </div>\n\n                //     <div className = 'contact-btn-div nav-btn'>\n\n                //         Contact\n\n                //     </div>\n\n                //     <div className = 'login-btn-div nav-btn'>\n\n                //         Log into Account\n\n                //     </div>\n\n                // </div>\n\n            // </div>\n\n        );   \n\n    }\n\n}\n\nexport default Mobile;","import React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx'\nimport MediaQuery from 'react-responsive';\n\nclass NavBar extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                    <Desktop />\n                                \n                </MediaQuery>\n\n                <MediaQuery maxDeviceWidth={1224}>\n\n                    <Mobile />\n\n                </MediaQuery>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default NavBar;","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport React, { Component } from \"react\";\nimport './LoadingAnimation.scss';\n\nclass TailSpin extends Component {\n\n    render() {\n\n        return (\n\n            <div className = 'loading-animation'>\n                \n                <Loader type=\"TailSpin\" color=\"#0066c9\" height={150} width={150} />\n\n            </div>\n\n        )\n\n    }\n    \n}\n\nexport default TailSpin;","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nclass MapContainer extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n        };\n\n    }\n\n    render() {\n\n        var labelText = this.props.label;\n\n        const mapStyles = {\n            width: this.props.width,\n            height: this.props.height,\n          };\n          \n\n        return(\n\n            <Map    google = { this.props.google }\n                    zoom = {16}\n                    style = {mapStyles}\n                    initialCenter={{ lat: this.props.latitude, lng: this.props.longitude }}>\n                        \n                <Marker position = {{ lat: this.props.latitude, lng: this.props.longitude }}\n                        label = {labelText}/>\n\n            </Map>\n\n        );\n\n    }\n\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8'\n  })(MapContainer);","import React, { Component } from 'react';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\nimport MapContainer from '../Map/MapContainer.jsx';\n\nclass RestaurantRender extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            result: [],\n            loaded: false,\n            photo: '',\n            photoSRC: ''\n\n        };\n\n    }\n\n    async componentDidMount() {\n\n        this.setState({\n\n            result: this.state.result.concat(this.props.data)\n\n        });\n        \n        var photoDetails = this.props.data.photos;\n        var photoRef = photoDetails[0].photo_reference;\n        var photoURL = 'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference='+ photoRef +'&key=AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8';\n\n        this.setState({\n\n            photoSRC: photoURL,\n            loaded: true\n\n        });\n\n    }\n\n    render() {\n\n        return (\n        \n            <div>\n\n                {this.state.loaded ? \n                \n                    <div className = ''>\n                        \n                        {this.state.result.map((item) => {\n\n                            return(\n\n                                <div key = {item.id} id = {'resultMap' + item.id} className = 'rest-div'>\n\n                                    <div className = 'title'>{item.name}</div>\n\n                                    <div className = 'address extra-info'>{item.vicinity}</div>\n\n                                    <div className = 'rating extra-info'>Average Rating: {item.rating} out of 5 <br /> Total Reviews: {item.user_ratings_total}</div>\n\n                                    <div className = 'photo-div'>\n\n                                        <img alt = { 'Image of ' + item.name} src = {this.state.photoSRC} className = 'photo'></img>\n\n                                    </div>\n\n                                    <div className = 'details'>\n\n                                        <div className = 'detail-title'>Details about {item.name}</div>\n\n                                        <div className = 'type-map'>\n\n                                            <ul className = 'type-ul'>\n\n                                                {item.types.map(function(type, index) {\n\n                                                    return (\n\n                                                        <li key = { index } className = 'type-li'>{ type.replace(/_/g, ' ') }</li>\n\n                                                    );\n\n                                                })}\n\n                                            </ul>\n\n                                        </div>\n\n                                    </div>\n\n                                    <div className = 'map-title title'>Location</div>\n\n                                    <div className = 'map-div'>\n\n                                        <MapContainer   latitude = { item.geometry.location.lat } \n                                                        longitude = { item.geometry.location.lng } \n                                                        height = { this.props.height }\n                                                        width = { this.props.width }\n                                                        label = { item.name }/>\n\n                                    </div>\n\n                                </div>\n\n                            );\n\n                        })}\n                        \n                    </div> \n                    \n                : \n                \n                    <div><TailSpin /></div>\n                    \n                }\n\n            </div>\n        \n        );\n\n    }\n\n}\n\nexport default RestaurantRender;","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport RestaurantRender from './RestaurantRender.jsx';\nimport './Desktop.scss';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            GoogleAPI: '',\n            loaded: false,\n            data: [],\n            placeholder: 'loading',\n            result: []\n\n        };\n\n        this.getRestaurant = this.getRestaurant.bind(this);\n\n    }\n\n    async componentDidMount() {\n\n        console.log(this.props.location.longitude)\n\n        this.setState({\n\n            GoogleAPI: 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=' \n                        + await this.props.location.latitude + ',' \n                        + await this.props.location.longitude \n                        +'&radius=1500&type=restaurant&key=AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8',\n\n        });\n\n        const proxyurl = 'https://cors-anywhere.herokuapp.com/';\n\n        fetch(proxyurl + this.state.GoogleAPI)\n            .then(response => {\n\n                if (response.status > 400) {\n\n                    return this.setState(() => {\n\n                        return { placeholder: 'Something went wrong!' };\n\n                    });\n\n                }\n                return response.json();\n\n            })\n            .then(data => {\n\n                this.setState(() => {\n\n                    return {\n\n                        data: data.results,\n                        loaded: true\n\n                    };\n\n                });\n\n            })\n            // .catch(() => console.log('Something went wrong')); //TO DO: Error Page\n\n    }\n\n    getRestaurant() {\n\n        var choiceResult = this.state.data.sort(() => Math.random() - Math.random()).find(() => true);\n\n        return (\n\n            ReactDOM.render (\n\n                //Terrible way to re-render component. Need to fix\n                <RestaurantRender height = { '800px' } width = { '800px' } data = { choiceResult } key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1}/>,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'restaurant-div'>\n\n                {this.state.loaded ? \n                \n                    <div>\n\n                        <div className = 'choice-btn-div'>\n\n                            <button className = 'find-rest-btn' onClick = {this.getRestaurant}>Find Restaurant</button>\n                            {/* <button className = 'filter-rest-btn'>Filter Restaurant</button> */}\n\n                        </div>\n\n                        <div className = 'render-div' id = 'targetDOM' name = 'targetDOM'></div>\n\n                    </div>\n\n                : <div><TailSpin /></div>}\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport RestaurantRender from './RestaurantRender.jsx';\nimport './Mobile.scss';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass Mobile extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            GoogleAPI: '',\n            loaded: false,\n            data: [],\n            placeholder: 'loading',\n            result: []\n\n        };\n\n        this.getRestaurant = this.getRestaurant.bind(this);\n\n    }\n\n    async componentDidMount() {\n\n        console.log(this.props.location.longitude)\n\n        this.setState({\n\n            GoogleAPI: 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=' \n                        + await this.props.location.latitude + ',' \n                        + await this.props.location.longitude \n                        +'&radius=1500&type=restaurant&key=AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8',\n\n        });\n\n        const proxyurl = 'https://cors-anywhere.herokuapp.com/';\n\n        fetch(proxyurl + this.state.GoogleAPI)\n            .then(response => {\n\n                if (response.status > 400) {\n\n                    return this.setState(() => {\n\n                        return { placeholder: 'Something went wrong!' };\n\n                    });\n\n                }\n                return response.json();\n\n            })\n            .then(data => {\n\n                this.setState(() => {\n\n                    return {\n\n                        data: data.results,\n                        loaded: true\n\n                    };\n\n                });\n\n            })\n            // .catch(() => console.log('Something went wrong')); //TO DO: Error Page\n\n    }\n\n    getRestaurant() {\n\n        var choiceResult = this.state.data.sort(() => Math.random() - Math.random()).find(() => true);\n\n        return (\n\n            ReactDOM.render (\n\n                //Terrible way to re-render component. Need to fix\n                <RestaurantRender height = { '400px' } width = { '' } data = {choiceResult} key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1}/>,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'restaurant-div'>\n\n                {this.state.loaded ? \n                \n                    <div>\n\n                        <div className = 'choice-btn-div'>\n\n                            <button className = 'find-rest-btn' onClick = {this.getRestaurant}>Find Restaurant</button>\n                            {/* <button className = 'filter-rest-btn'>Filter Restaurant</button> */}\n\n                        </div>\n\n                        <div className = 'render-div-mb' id = 'targetDOM' name = 'targetDOM'></div>\n\n                    </div>\n\n                : <div><TailSpin /></div>}\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Mobile;","import React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx'\nimport MediaQuery from 'react-responsive';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass Restaurant extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            loaded: false,\n            placeholder: 'loading',\n            location: {\n\n                latitude: 0,\n                longitude: 0\n\n            }\n\n        };\n\n        this.success = this.success.bind(this);\n        this.error = this.success.bind(this);\n\n    }\n\n    async success(position) {\n\n        this.setState({\n\n            location: {\n\n                latitude: await position.coords.latitude,\n                longitude: await position.coords.longitude\n\n            },\n            loaded: true\n\n        });\n\n    }\n\n    async componentDidMount() {\n\n        if ('geolocation' in navigator) {\n\n            var options = {\n\n                enableHighAccuracy: true\n\n            }\n\n            navigator.geolocation.getCurrentPosition(this.success, this.error, options);\n            \n\n        }\n        else {\n\n            console.log('Geo Location Unavailable');\n\n        }\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                {this.state.loaded ? \n                \n                    <div>\n\n                        <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                            <Desktop location = { this.state.location }/>\n                                    \n                        </MediaQuery>\n\n                        <MediaQuery maxDeviceWidth={1224}>\n\n                            <Mobile location = { this.state.location } />\n\n                        </MediaQuery>\n\n                    </div>\n\n                : <div><TailSpin /></div>\n                \n                }\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Restaurant;","import React, { Component } from \"react\";\nimport './Desktop.scss';\nimport recipes from './TestData.json';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx'\n\nclass RecipeRender extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            data: [],\n            loaded: false,\n            test_data: recipes.recipes,\n            detailsRender: false,\n            detailInstructions: false,\n            url: 'https://api.spoonacular.com/recipes/random?limitLicense=true&type=main course&number=1&apiKey=130e563e3ec24b1cb56f71b67b4ae9aa'\n\n        };\n\n        this.showDetailedInstructions = this.showDetailedInstructions.bind(this);\n\n    }\n\n    async componentDidMount() {\n\n     await fetch(this.state.url)\n        .then(response => {\n\n            if (response.status > 400) {\n\n                return this.setState(() => {\n\n                    return { placeholder: 'Something went wrong!' };\n\n                });\n\n            }\n            return response.json();\n\n        })\n        .then(data => {\n\n            this.setState(() => {\n\n                return {\n                    \n                    data: data.recipes,\n                    loaded: true\n\n                };\n\n            });\n\n        })\n        .catch(() => console.log('Something went wrong')); //TO DO: Error Page\n\n    }\n\n    showDetailedInstructions() {\n\n        this.setState(prevState => ({\n\n            detailInstructions: !prevState.detailInstructions\n\n        }));\n\n    }\n\n    render() {\n\n        return (\n\n            this.state.loaded ? \n            \n            <div className = 'render-div'>\n\n                {this.state.data.map((recipe, index) => {\n\n                    let sourceURL = recipe.sourceUrl.split('.');\n                    let sourceName = sourceURL[1];\n\n                    let removeSummaryLinks = recipe.summary.split('<a')[0].replace(/<b>/g,'').replace(/<\\/b>/g,'');\n\n                    let removeSummaryTry = removeSummaryLinks.split('Try')[0];\n\n                    let summary = removeSummaryTry.split('If you Like this recipe')[0];\n\n                    // Removes unwanted HTML from string\n                    // TODO: Create Regex to handle cases\n                    let removeListFromInstructions = recipe.instructions.replace(/<li>/g, ' ').replace(/<\\/li>/g, '');\n                    let removeOLFromInstructions = removeListFromInstructions.replace(/<ol>/g, '').replace(/<\\/ol>/g, '');\n                    let removeParagraphFromInstructions =  removeOLFromInstructions.replace(/<p>/g, '').replace(/<\\/p>/g, ' ');\n                    let basicInstructions = removeParagraphFromInstructions;\n\n                    // let basicInstructions = recipe.instructions.replace(/<li>/g, ' ').replace(/<\\/li>/g, '').replace(/<ol>/g, '').replace(/<\\/ol>/g, '');\n\n                    return(\n\n                        <div key = { index }>\n\n                            <div className = 'title'>{ recipe.title }</div>\n\n                            <div className = 'source-link'>\n\n                                <a href = { recipe.sourceUrl }>\n                                    \n                                    <button className = 'source-btn'>View on  <span className = 'source-name'> { sourceName }</span></button>\n                                    \n                                </a>\n\n                            </div>\n\n                            <div className = 'spoonacular-link'>\n\n                                <a className = 'spoon-a' href = 'https://spoonacular.com/'>\n                                    \n                                    <button className = 'spoonacular-btn'>Powered by Spoonacular</button>\n                                    \n                                </a>\n\n                            </div>\n\n                            <div className = 'image-div'>\n\n                                <img alt = { 'Picture of ' + recipe.title } src = { recipe.image } className = 'recipe-img'></img>\n\n                            </div>\n\n                            <div className = 'desc-div'>\n\n                                <div className = 'desc-title title'>Spoonacular Description</div>\n\n                                <p className = 'summary-p'>{ summary }</p>\n\n                            </div>\n\n                            <div className = 'details-div'>\n\n                                <ul className = 'details-ul'>\n\n                                    {recipe.vegetarian && <li className = 'details-li'>Vegetarian</li>}\n\n                                    {recipe.vegan && <li className = 'details-li'>Vegan</li>}\n\n                                    {recipe.glutenFree && <li className = 'details-li'>Gluten Free</li>}\n\n                                    {recipe.dairyFree && <li className = 'details-li'>Dairy Free</li>}\n\n                                    {recipe.sustainable && <li className = 'details-li'>Sustainable</li>}\n\n                                    {recipe.cheap && <li className = 'details-li'>Cheap</li>}\n\n                                </ul>\n\n                            </div>\n\n                            <div className = 'ing-div'>\n\n                                <div className = 'title'>Ingredients</div>\n\n                                <ul className = 'ing-ul'>\n\n                                    {recipe.extendedIngredients.map((ing, index) => {\n\n                                        return (\n\n                                            <li className = 'ing-li' key = { index }>\n\n                                                <div className = 'ing-name'>{ing.original}</div>\n\n                                            </li>\n\n                                        );\n\n                                    })}\n\n                                </ul>\n\n                            </div>\n\n                            <div className = 'instruction-div'>\n\n                                <div className = 'title'>Instructions</div>\n\n                                {!this.state.detailInstructions ? \n                                \n                                <div className = 'basic-div'>\n\n                                    <div className = 'basic-instructions'>\n\n                                        { basicInstructions }\n\n                                    </div>\n\n                                    <button className = 'detail-inst-btn' onClick = {this.showDetailedInstructions}>Detailed Instructions</button>\n\n                                </div>\n\n                                :\n\n                                <div className = 'detailed-div'>\n\n                                    <button className = 'simple-inst-btn' onClick = {this.showDetailedInstructions}>Simplified Instructions</button>\n\n                                    {recipe.analyzedInstructions.map((inst, index) => {\n\n                                        return (\n\n                                            <div key = { index }>\n\n                                                <ul className = 'step-ul'>\n\n                                                    {inst.steps.map((step, index) => {\n\n                                                        return (\n\n                                                            <li key = { index } className = 'step-li'>\n\n                                                                <div className = 'step-num'>Step { step.number }</div>\n\n                                                                <div className = 'step-desc'> { step.step }</div>\n\n                                                                {step.equipment.length > 0 &&\n                                                                \n                                                                    <div className = 'equipment-div'>\n\n                                                                        <div className = 'equipment-title'>Equipment</div>\n\n                                                                        <ul className = 'equipment-ul'>\n\n                                                                        {step.equipment.map((equipment, index) => {\n\n                                                                            return (\n\n                                                                                <li className = 'equipment-li' key = { index }>\n                                                                                    \n                                                                                    <div className = 'equipment-name'>{ equipment.name }</div>\n                                                                                    \n                                                                                </li>\n\n                                                                            );\n\n                                                                            })}\n\n                                                                        </ul>\n\n                                                                    </div>\n                                                                \n                                                                }\n\n                                                                {step.ingredients.length > 0 &&\n                                                                \n                                                                    <div className = 'ing-map-div'>\n\n                                                                        <div className = 'ing-map-title'>Ingredients</div>\n\n                                                                        <ul className = 'ing-map-ul'>\n\n                                                                            {step.ingredients.map((ing, index) => {\n\n                                                                                return (\n\n                                                                                    <li className = 'ing-map-li' key = { index }>\n\n                                                                                        <div className = 'ing-map-name'>{ ing.name }</div>\n\n                                                                                    </li>\n\n                                                                                );\n\n                                                                            })}\n\n                                                                        </ul>\n\n                                                                    </div>\n                                                                \n                                                                }\n\n                                                            </li>\n\n                                                        );\n\n                                                    })}\n\n                                                </ul>\n\n                                            </div>\n\n                                        )\n\n                                    })}\n\n                                </div>\n                                \n                                }\n\n                            </div>\n\n                        </div>\n\n                    );\n\n                })}\n\n            </div> : <div><TailSpin></TailSpin></div>\n\n        );   \n\n    }\n\n}\n\nexport default RecipeRender;","import React, { Component } from \"react\";\nimport './Desktop.scss';\nimport RecipeRender from './RecipeRender.jsx';\nimport ReactDOM from 'react-dom';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n        this.getRecipe = this.getRecipe.bind(this);\n\n    }\n\n    getRecipe() {\n\n        return  (\n\n            ReactDOM.render( \n\n                <RecipeRender key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1} />,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'recipe-render'>\n                \n                <div className = 'btn-div'>\n\n                    <button className = 'get-recipe-btn' onClick = {this.getRecipe}>Get Recipe!</button>\n\n                </div>\n\n                <div className = 'render-dom' id = 'targetDOM' name = 'targetDOM'></div>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;","import React, { Component } from \"react\";\nimport './Mobile.scss';\nimport RecipeRender from './RecipeRender.jsx';\nimport ReactDOM from 'react-dom';\n\nclass Mobile extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n        this.getRecipe = this.getRecipe.bind(this);\n\n    }\n\n    getRecipe() {\n\n        return  (\n\n            ReactDOM.render( \n\n                <RecipeRender key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1} />,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'recipe-render-mobile'>\n                \n                <div className = 'btn-div'>\n\n                    <button className = 'get-recipe-btn' onClick = {this.getRecipe}>Get Recipe!</button>\n\n                </div>\n\n                <div className = 'render-dom' id = 'targetDOM' name = 'targetDOM'></div>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Mobile;","import React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx'\nimport MediaQuery from 'react-responsive';\n\nclass Recipe extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {        };\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                    <Desktop />\n                                \n                </MediaQuery>\n\n                <MediaQuery maxDeviceWidth={1224}>\n\n                    <Mobile />\n\n                </MediaQuery>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Recipe;","import React, { Component } from 'react';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx'\n\nclass BookRender extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            data: [],\n            loaded: false,\n        };\n\n    }\n\n    async componentDidMount() {\n\n        var randomNum = Math.floor(Math.random() * 400);\n        var url = 'https://www.googleapis.com/books/v1/volumes?q=subject:fiction&maxResults=1&startIndex=' + randomNum + '&langRestrict=en&orderBy=relevance&printType=books&key=AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8'\n\n        await fetch(url)\n        .then(response => {\n\n            if (response.status > 400) {\n                \n                this.setState({\n\n                    placeholder: 'Something went wrong'\n\n                })\n\n            }\n            return response.json();\n\n        })\n        .then(data => {\n\n            this.setState({\n\n                data: data.items,\n                loaded: true\n\n            })\n\n        })\n        .catch(() => this.setState({ placeholder: 'Something went wrong' })); //TO DO: Error Page\n\n    }\n\n    render() {\n\n        return (\n\n            this.state.loaded ? \n            \n            <div className = 'render-div'>\n\n                {this.state.data.map((book, index) => {\n\n                    return(\n\n                        <div key = { book.id }>\n\n                            <div className = 'title'>{ book.volumeInfo.title }</div>\n\n                            <div className = 'author-list-div'>\n\n                                <div className = 'author-title'>Author</div>\n\n                                <ul className = 'author-ul'>\n\n                                    {book.volumeInfo.authors.map((author, index) => {\n\n                                        return(\n\n                                            <li key = { index } className = 'author-li'>\n\n                                                { author }\n\n                                            </li>\n\n                                        );\n\n                                    })}\n\n                                </ul>\n\n                            </div>\n\n                            <div className = 'publisher-div'>\n\n                                <div className = 'publisher-title'>Publisher</div>\n                                \n                                { book.volumeInfo.publisher }\n                                \n                            </div>\n\n                            <div className = 'cover-div'>\n\n                                <img alt = { 'Book Cover for ' + book.volumeInfo.title } className = 'cover-img' id = 'coverIMG' src = { book.volumeInfo.imageLinks.thumbnail.replace('zoom=1', 'zoom=0') }></img>\n\n                            </div>\n\n                            <div className = 'desc-div'>\n\n                                <div className = 'title'>Description</div>\n\n                                <div className = 'desc'>{ book.volumeInfo.description }</div>\n                                \n                            </div>\n\n                            <div className = 'details-div'>\n\n                                    \n\n                                    { book.volumeInfo.averageRating &&  \n                                    \n                                        <div className = 'rating-div'>\n\n                                            <div className = 'rating-title title'>Average Rating</div>\n\n                                            { book.volumeInfo.averageRating } out of 5\n\n                                        </div>\n                                        \n                                    }\n\n                                    <div className = 'prev-buy-div'>\n\n                                        <div className = 'prev-buy-title title'>Buy or Sample { book.volumeInfo.title }</div>\n\n                                        <a href = {book.volumeInfo.previewLink}><button className = 'prev-btn btn'>Preview</button></a>\n\n                                        {book.saleInfo.buyLink ? \n                                        \n                                            <a href = {book.saleInfo.buyLink}><button className = 'buy-btn btn'>Buy</button></a> \n                                            \n                                        : \n                                        \n                                            <a href = { 'https://www.google.com/search?q=' + book.volumeInfo.title }><button className = 'buy-btn btn'>Find on Google</button></a>\n                                            \n                                        }\n\n                                    </div>\n\n                            </div>\n\n                        </div>\n\n                    );\n\n                })}\n\n            </div> : <div><TailSpin></TailSpin></div>\n\n        );   \n\n    }\n\n}\n\nexport default BookRender;","import React, { Component } from \"react\";\nimport './Desktop.scss';\nimport BookRender from './BookRender.jsx';\nimport ReactDOM from 'react-dom';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n        this.getBook = this.getBook.bind(this);\n\n    }\n\n    getBook() {\n\n        return  (\n\n            ReactDOM.render( \n\n                <BookRender key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1} />,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'book-render'>\n                \n                <div className = 'btn-div'>\n\n                    <button className = 'get-book-btn' onClick = {this.getBook}>Find a Book to Read!</button>\n\n                </div>\n\n                <div className = 'render-dom' id = 'targetDOM' name = 'targetDOM'></div>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;","import React, { Component } from \"react\";\nimport './Mobile.scss';\nimport BookRender from './BookRender.jsx';\nimport ReactDOM from 'react-dom';\n\nclass Mobile extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n        this.getBook = this.getBook.bind(this);\n\n    }\n\n    getBook() {\n\n        return  (\n\n            ReactDOM.render( \n\n                <BookRender key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1} />,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'book-render-mobile'>\n                \n                <div className = 'btn-div'>\n\n                    <button className = 'get-book-btn' onClick = {this.getBook}>Find a Book to Read!</button>\n\n                </div>\n\n                <div className = 'render-dom' id = 'targetDOM' name = 'targetDOM'></div>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Mobile;","import React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx'\nimport MediaQuery from 'react-responsive';\n\nclass Book extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                    <Desktop />\n                                \n                </MediaQuery>\n\n                <MediaQuery maxDeviceWidth={1224}>\n\n                    <Mobile />\n\n                </MediaQuery>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Book;","import React, { Component } from 'react';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx'\n\nclass BookRender extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            data: [],\n            loaded: false,\n            movie: []\n\n        };\n\n    }\n\n    async componentDidMount() {\n\n        var randomNum = Math.floor(Math.random() * 20);\n        var url = 'https://api.themoviedb.org/3/trending/movie/day?api_key=b28164bd1b9bf9badeb8f15b70ce1dec&page=' + randomNum;\n\n        await fetch(url)\n        .then(response => {\n\n            if (response.status > 400) {\n                \n                this.setState({\n\n                    placeholder: 'Something went wrong'\n\n                })\n\n            }\n            return response.json();\n\n        })\n        .then(data => {\n\n            this.setState({\n\n                data: data.results\n\n            })\n\n        })\n        .catch(() => this.setState({ placeholder: 'Something went wrong' })); //TO DO: Error Page\n\n        let rand = Math.floor(Math.random() * this.state.data.length);\n\n        this.setState({\n\n            movie: this.state.movie.concat(this.state.data[rand]),\n            loaded: true\n\n        });\n\n    }\n\n    render() {\n\n        return (\n\n            this.state.loaded ? \n            \n            <div className = 'render-div'>\n\n                {this.state.movie.map((movie, index) => {\n\n                    return(\n\n                        <div key = { movie.id }>\n\n                            <div className = 'title'>{ movie.title }</div>\n\n                            <div className = 'poster-div'>\n\n                                <img alt = { 'Poster for ' + movie.title } className = 'poster-img' src = {'https://image.tmdb.org/t/p/w500' + movie.poster_path}></img>\n\n                            </div>\n\n                            <div className = 'desc-div'>\n\n                                <div className = 'title'>Description</div>\n                                \n                                <div className = 'desc'>{ movie.overview }</div>\n                                \n                            </div>\n\n                            {/* <div className = 'rating'>{ movie.vote_average + ' out of 10.'}</div> */}\n\n                            <div className = 'details-div'>\n\n                                <div className = 'rating-div'>\n\n                                    <div className = 'rating-title'>\n\n                                        Rating\n\n                                    </div>\n\n                                    <div className = 'rating-details'>\n\n                                        { movie.vote_average + ' out of 10'}\n\n                                    </div>\n\n                                    <div className = 'rating-details'>\n\n                                        { movie.vote_count + ' votes cast' }\n\n                                    </div>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    );\n\n                })}\n\n            </div> : <div><TailSpin></TailSpin></div>\n\n        );   \n\n    }\n\n}\n\nexport default BookRender;","import React, { Component } from \"react\";\nimport './Desktop.scss';\nimport MovieRender from './MovieRender.jsx';\nimport ReactDOM from 'react-dom';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n        this.getMovie = this.getMovie.bind(this);\n\n    }\n\n    getMovie() {\n\n        return  (\n\n            ReactDOM.render( \n\n                <MovieRender key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1} />,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'movie-render'>\n                \n                <div className = 'btn-div'>\n\n                    <button className = 'get-movie-btn' onClick = {this.getMovie}>Find a Movie to Watch</button>\n\n                </div>\n\n                <div className = 'render-dom' id = 'targetDOM' name = 'targetDOM'></div>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;","import React, { Component } from \"react\";\nimport './Mobile.scss';\nimport MovieRender from './MovieRender.jsx';\nimport ReactDOM from 'react-dom';\n\nclass Mobile extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n        this.getMovie = this.getMovie.bind(this);\n\n    }\n\n    getMovie() {\n\n        return  (\n\n            ReactDOM.render( \n\n                <MovieRender key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1} />,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'movie-render-mb'>\n\n                <div className = 'btn-div'>\n\n                    <button className = 'get-movie-btn' onClick = {this.getMovie}>Find a Movie to Watch</button>\n                    \n                </div>\n                \n                <div className = 'render-dom' id = 'targetDOM' name = 'targetDOM'></div>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Mobile;","import React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx'\nimport MediaQuery from 'react-responsive';\n\nclass Book extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                    <Desktop />\n                                \n                </MediaQuery>\n\n                <MediaQuery maxDeviceWidth={1224}>\n\n                    <Mobile />\n\n                </MediaQuery>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Book;","import React, { Component } from \"react\";\nimport { HashRouter, Switch, Link, Route } from 'react-router-dom';\nimport Restaurant from '../Restaurant/Restaurant.jsx';\nimport Recipe from '../Recipe/Recipe.jsx';\nimport Book from '../Book/Book.jsx';\nimport Movie from '../Movie/Movie.jsx';\n\nimport './OptionsDesktop.scss';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            desc: 'Can\\t make up your mind? Leave it to DESIDER!',\n            homeURL: '/#',\n            recipeURL: '/Recipe',\n            bookURL: '/Book',\n            restaurantURL: '/Restaurant',\n            movieURL: '/Movie'\n\n        };\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'options-div'>\n\n                <div className = 'title' >{this.state.desc}</div>\n\n                <HashRouter>\n\n                    <div className = 'choice-div'>\n\n                        <Link to = {this.state.restaurantURL} className = 'option-link'>\n\n                            <div className = 'option'>                   \n\n                                <span className = ''>Restaurant</span>\n                                \n                            </div>\n\n                        </Link>\n                        <Link to = {this.state.recipeURL} className = 'option-link'>\n\n                            <div className = 'option'>                   \n\n                                <span className = ''>Recipe</span>\n                                \n                            </div>\n\n                        </Link>\n                        {/* <Link to = \"/#\">\n\n                            <div className = 'option'>                   \n\n                                <span className = ''>Gift</span>\n                                \n                            </div>\n\n                        </Link> */}\n                        <Link to = {this.state.bookURL} className = 'option-link'>\n\n                            <div className = 'option'>                   \n\n                                <span className = ''>Book</span>\n                                \n                            </div>\n\n                        </Link>\n                        <Link to = { this.state.movieURL } className = 'option-link'>\n\n                            <div className = 'option'>                   \n\n                                <span className = ''>Movie</span>\n                                \n                            </div>\n\n                        </Link>\n\n                    </div>\n\n                    <div className = 'switch-div'>\n\n                        <Switch>\n\n                            <Route path = '/Restaurant' component = { Restaurant }></Route>\n\n                            <Route path = '/Recipe' component = { Recipe }></Route>\n\n                            <Route path = '/Book' component = { Book }></Route>\n\n                            <Route path = '/Movie' component = { Movie }></Route>\n\n                        </Switch>\n\n                    </div>\n\n                </HashRouter>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;","import React, { Component } from \"react\";\nimport { HashRouter, Switch, Link, Route } from 'react-router-dom';\n\n//Components\nimport Restaurant from '../Restaurant/Restaurant.jsx'\nimport Movie from '../Movie/Movie.jsx';\nimport Book from '../Book/Book.jsx';\nimport Recipe from \"../Recipe/Recipe.jsx\";\n\n//Style Sheets\nimport './OptionsMobile.scss';\n\nclass Mobile extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            desc: 'Can\\'t make up your mind? Leave it to DESIDER!',\n            homeURL: '/#',\n            recipeURL: '/Recipe',\n            bookURL: '/Book',\n            restaurantURL: '/Restaurant',\n            movieURL: '/Movie',\n            optionsVisible: true\n\n        };\n\n        this.hideOptions = this.hideOptions.bind(this);\n        this.showOptions = this.showOptions.bind(this);\n\n    }\n\n    hideOptions() {\n\n        this.setState({\n\n            optionsVisible: false\n\n        })\n\n    }\n\n    showOptions() {\n\n        this.setState({\n\n            optionsVisible: true\n\n        })\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'options-div-mb'>\n\n                { this.state.optionsVisible ? <div className = 'title' >Can't make up your mind? <br />Leave it to DESIDER!</div> : <div></div>}\n\n                    <HashRouter>\n\n                        { this.state.optionsVisible ? <div className = 'choice-div'>\n\n                            <Link to = { this.state.restaurantURL }>\n\n                                <div className = 'option' onClick = { this.hideOptions }>                   \n\n                                    <span className = ''>Restaurant</span>\n                                    \n                                </div>\n\n                            </Link>\n                            <Link to = { this.state.recipeURL }>\n\n                                <div className = 'option' onClick = { this.hideOptions }>                   \n\n                                    <span className = ''>Recipe</span>\n                                    \n                                </div>\n\n                            </Link>\n                            {/* <Link to = \"/#\">\n\n                                <div className = 'option'>                   \n\n                                    <span className = ''>Gift</span>\n                                    \n                                </div>\n\n                            </Link> */}\n                            <Link to = { this.state.bookURL }>\n\n                                <div className = 'option' onClick = { this.hideOptions }>                   \n\n                                    <span className = ''>Book</span>\n                                    \n                                </div>\n\n                            </Link>\n                            <Link to = { this.state.movieURL }>\n\n                                <div className = 'option' onClick = { this.hideOptions }>                   \n\n                                    <span className = ''>Movie</span>\n                                    \n                                </div>\n\n                            </Link>\n\n                        </div> : \n                        <div>\n\n                            <div className = 'other-options' onClick = { this.showOptions }>Select Another Options</div>\n\n                        </div> }\n\n                        {!this.state.optionsVisible && \n                        \n                            <div className = 'switch-div'>\n\n                                <Switch>\n\n                                    <Route path = { this.state.restaurantURL } component = { Restaurant }></Route>\n\n                                    <Route path = { this.state.movieURL } component = { Movie }></Route>\n\n                                    <Route path = { this.state.bookURL } component = { Book }></Route>\n\n                                    <Route path = { this.state.recipeURL } component = { Recipe }></Route>\n                                    \n                                </Switch> \n\n                            </div>\n                        \n                        }\n\n                    </HashRouter>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Mobile;","import React, { Component } from \"react\";\nimport Desktop from './OptionsDesktop.jsx';\nimport Mobile from './OptionsMobile.jsx'\nimport MediaQuery from 'react-responsive';\n\nclass Options extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                    <Desktop />\n                                \n                </MediaQuery>\n\n                <MediaQuery maxDeviceWidth={1224}>\n\n                    <Mobile />\n\n                </MediaQuery>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Options;","import React, { Component } from \"react\";\nimport './Desktop.scss';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'footer-render'>\n\n                <div className = 'title'>Powered By</div>\n\n                <a href = 'https://www.themoviedb.org/'>\n                    \n                    <div className = 'the-movie-db'>\n\n                        <img alt = 'Icon for The Movie Database' className = 'the-movie-db-img' src = { this.props.TheMovieDB }></img>\n\n                    </div>\n\n                </a>\n\n                {/* <a href = 'https://spoonacular.com/'>\n                    \n                    <div className = 'Spoontacular'>\n\n                        <img className = 'the-movie-db-img' src = 'https://spoonacular.com/application/frontend/images/spoonacular-logo.svg'></img>\n\n                    </div>\n\n                </a> */}\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;","import React, { Component } from \"react\";\nimport './Mobile.scss';\n\nclass Mobile extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div>Mobile</div>\n\n        );   \n\n    }\n\n}\n\nexport default Mobile;","import React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx'\nimport MediaQuery from 'react-responsive';\n\nclass Footer extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            TheMovieDB: 'https://www.themoviedb.org/assets/2/v4/logos/v2/blue_long_2-9665a76b1ae401a510ec1e0ca40ddcb3b0cfe45f1d51b77a308fea0845885648.svg'\n\n        };\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                    <Desktop TheMovieDB = { this.state.TheMovieDB }/>\n                                \n                </MediaQuery>\n\n                <MediaQuery maxDeviceWidth={1224}>\n\n                    <Mobile  TheMovieDB = { this.state.TheMovieDB } />\n\n                </MediaQuery>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport NavBar from '../NavBar/NavBar.jsx';\nimport Options from '../Options/Options.jsx';\nimport Footer from '../Footer/Footer.jsx';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (            \n\n            <div>\n\n                <div className = 'full-page-div'>\n\n                    <NavBar />\n\n                <div className = 'body-div'>\n\n                    <Options />\n                    \n                </div>\n\n                </div>\n\n                <div className = 'footer-div'>\n\n                    <Footer />\n\n                </div>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;","import React, { Component } from \"react\";\nimport NavBar from '../NavBar/NavBar.jsx';\nimport Options from '../Options/Options.jsx';\nimport './MobileApp.scss';\n\nclass Mobile extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'full-page-div'>\n\n                <NavBar />\n\n                <div className = 'body-div body-div-mb'>\n\n                    <Options />\n                    \n                </div>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Mobile;","import React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx'\nimport MediaQuery from 'react-responsive';\n\nclass App extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {};\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                    <Desktop />\n                                \n                </MediaQuery>\n\n                <MediaQuery maxDeviceWidth={1224}>\n\n                    <Mobile />\n\n                </MediaQuery>\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default App;\n\n// const container = document.getElementById(\"app\");\n// render(<App />, container);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}