{"ast":null,"code":"var _jsxFileName = \"/Users/sclark/Documents/Desider/desider/src/Restaurant/Desktop.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport RestaurantRender from './RestaurantRender.jsx';\nimport './Desktop.scss';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass Desktop extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      GoogleAPI: '',\n      loaded: false,\n      data: [],\n      placeholder: 'loading',\n      result: []\n    };\n    this.getRestaurant = this.getRestaurant.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log(this.props.location.longitude);\n    this.setState({\n      GoogleAPI: 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=' + (await this.props.location.latitude) + ',' + (await this.props.location.longitude) + '&radius=1500&type=restaurant&key=AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8'\n    });\n    const proxyurl = 'https://cors-anywhere.herokuapp.com/';\n    fetch(proxyurl + this.state.GoogleAPI).then(response => {\n      if (response.status > 400) {\n        return this.setState(() => {\n          return {\n            placeholder: 'Something went wrong!'\n          };\n        });\n      }\n\n      return response.json();\n    }).then(data => {\n      this.setState(() => {\n        return {\n          data: data.results,\n          loaded: true\n        };\n      });\n    }); // .catch(() => console.log('Something went wrong')); //TO DO: Error Page\n  }\n\n  getRestaurant() {\n    var choiceResult = this.state.data.sort(() => Math.random() - Math.random()).find(() => true);\n    return ReactDOM.render(\n    /*#__PURE__*/\n    //Terrible way to re-render component. Need to fix\n    React.createElement(RestaurantRender, {\n      height: '800px',\n      width: '800px',\n      data: choiceResult,\n      key: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), document.getElementById('targetDOM'));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"restaurant-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"choice-btn-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"find-rest-btn\",\n      onClick: this.getRestaurant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, \"Find Restaurant\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"render-div\",\n      id: \"targetDOM\",\n      name: \"targetDOM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TailSpin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 24\n      }\n    })));\n  }\n\n}\n\nexport default Desktop;","map":{"version":3,"sources":["/Users/sclark/Documents/Desider/desider/src/Restaurant/Desktop.jsx"],"names":["React","Component","ReactDOM","RestaurantRender","TailSpin","Desktop","constructor","props","state","GoogleAPI","loaded","data","placeholder","result","getRestaurant","bind","componentDidMount","console","log","location","longitude","setState","latitude","proxyurl","fetch","then","response","status","json","results","choiceResult","sort","Math","random","find","render","floor","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport RestaurantRender from './RestaurantRender.jsx';\nimport './Desktop.scss';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass Desktop extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            GoogleAPI: '',\n            loaded: false,\n            data: [],\n            placeholder: 'loading',\n            result: []\n\n        };\n\n        this.getRestaurant = this.getRestaurant.bind(this);\n\n    }\n\n    async componentDidMount() {\n\n        console.log(this.props.location.longitude)\n\n        this.setState({\n\n            GoogleAPI: 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=' \n                        + await this.props.location.latitude + ',' \n                        + await this.props.location.longitude \n                        +'&radius=1500&type=restaurant&key=AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8',\n\n        });\n\n        const proxyurl = 'https://cors-anywhere.herokuapp.com/';\n\n        fetch(proxyurl + this.state.GoogleAPI)\n            .then(response => {\n\n                if (response.status > 400) {\n\n                    return this.setState(() => {\n\n                        return { placeholder: 'Something went wrong!' };\n\n                    });\n\n                }\n                return response.json();\n\n            })\n            .then(data => {\n\n                this.setState(() => {\n\n                    return {\n\n                        data: data.results,\n                        loaded: true\n\n                    };\n\n                });\n\n            })\n            // .catch(() => console.log('Something went wrong')); //TO DO: Error Page\n\n    }\n\n    getRestaurant() {\n\n        var choiceResult = this.state.data.sort(() => Math.random() - Math.random()).find(() => true);\n\n        return (\n\n            ReactDOM.render (\n\n                //Terrible way to re-render component. Need to fix\n                <RestaurantRender height = { '800px' } width = { '800px' } data = { choiceResult } key = {Math.floor(Math.random() * (100 - 1 + 1)) + 1}/>,document.getElementById('targetDOM')\n\n            )\n\n        );\n\n    }\n\n    render() {\n\n        return (\n\n            <div className = 'restaurant-div'>\n\n                {this.state.loaded ? \n                \n                    <div>\n\n                        <div className = 'choice-btn-div'>\n\n                            <button className = 'find-rest-btn' onClick = {this.getRestaurant}>Find Restaurant</button>\n                            {/* <button className = 'filter-rest-btn'>Filter Restaurant</button> */}\n\n                        </div>\n\n                        <div className = 'render-div' id = 'targetDOM' name = 'targetDOM'></div>\n\n                    </div>\n\n                : <div><TailSpin /></div>}\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Desktop;"]},"metadata":{},"sourceType":"module"}