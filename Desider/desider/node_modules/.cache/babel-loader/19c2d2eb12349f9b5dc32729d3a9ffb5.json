{"ast":null,"code":"var _jsxFileName = \"/Users/sclark/Documents/Desider/desider/src/Recipe/RecipeRender.jsx\";\nimport React, { Component } from \"react\";\nimport './Desktop.scss';\nimport recipes from './TestData.json';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass RecipeRender extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loaded: false,\n      test_data: recipes.recipes,\n      detailsRender: false,\n      detailInstructions: false,\n      url: 'https://api.spoonacular.com/recipes/random?limitLicense=true&type=main course&number=1&apiKey=130e563e3ec24b1cb56f71b67b4ae9aa'\n    };\n    this.showDetailedInstructions = this.showDetailedInstructions.bind(this);\n  }\n\n  async componentDidMount() {\n    await fetch(this.state.url).then(response => {\n      if (response.status > 400) {\n        return this.setState(() => {\n          return {\n            placeholder: 'Something went wrong!'\n          };\n        });\n      }\n\n      return response.json();\n    }).then(data => {\n      this.setState(() => {\n        return {\n          data: data.recipes,\n          loaded: true\n        };\n      });\n    }).catch(() => console.log('Something went wrong')); //TO DO: Error Page\n  }\n\n  showDetailedInstructions() {\n    this.setState(prevState => ({\n      detailInstructions: !prevState.detailInstructions\n    }));\n  }\n\n  render() {\n    return this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"render-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, this.state.data.map((recipe, index) => {\n      let sourceURL = recipe.sourceUrl.split('.');\n      let sourceName = sourceURL[1];\n      let removeSummaryLinks = recipe.summary.split('<a')[0].replace(/<b>/g, '').replace(/<\\/b>/g, '');\n      let removeSummaryTry = removeSummaryLinks.split('Try')[0];\n      let summary = removeSummaryTry.split('If you Like this recipe')[0]; // Removes unwanted HTML from string\n      // TODO: Create Regex to handle cases\n\n      let removeListFromInstructions = recipe.instructions.replace(/<li>/g, ' ').replace(/<\\/li>/g, '');\n      let removeOLFromInstructions = removeListFromInstructions.replace(/<ol>/g, '').replace(/<\\/ol>/g, '');\n      let removeParagraphFromInstructions = removeOLFromInstructions.replace(/<p>/g, '').replace(/<\\/p>/g, ' ');\n      let basicInstructions = removeParagraphFromInstructions; // let basicInstructions = recipe.instructions.replace(/<li>/g, ' ').replace(/<\\/li>/g, '').replace(/<ol>/g, '').replace(/<\\/ol>/g, '');\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, recipe.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"source-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: recipe.sourceUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"source-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }, \"View on  \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"source-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 79\n        }\n      }, \" \", sourceName)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spoonacular-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"spoon-a\",\n        href: \"https://spoonacular.com/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"spoonacular-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 37\n        }\n      }, \"Powered by Spoonacular\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"image-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: 'Picture of ' + recipe.title,\n        src: recipe.image,\n        className: \"recipe-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"desc-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"desc-title title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, \"Spoonacular Description\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"summary-p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }, summary)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"details-ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }, recipe.vegetarian && /*#__PURE__*/React.createElement(\"li\", {\n        className: \"details-li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 59\n        }\n      }, \"Vegetarian\"), recipe.vegan && /*#__PURE__*/React.createElement(\"li\", {\n        className: \"details-li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 54\n        }\n      }, \"Vegan\"), recipe.glutenFree && /*#__PURE__*/React.createElement(\"li\", {\n        className: \"details-li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 59\n        }\n      }, \"Gluten Free\"), recipe.dairyFree && /*#__PURE__*/React.createElement(\"li\", {\n        className: \"details-li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 58\n        }\n      }, \"Dairy Free\"), recipe.sustainable && /*#__PURE__*/React.createElement(\"li\", {\n        className: \"details-li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 60\n        }\n      }, \"Sustainable\"), recipe.cheap && /*#__PURE__*/React.createElement(\"li\", {\n        className: \"details-li\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 54\n        }\n      }, \"Cheap\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ing-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 33\n        }\n      }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"ing-ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }, recipe.extendedIngredients.map((ing, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"ing-li\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ing-name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 49\n          }\n        }, ing.original));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"instruction-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 33\n        }\n      }, \"Instructions\"), !this.state.detailInstructions ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"basic-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"basic-instructions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 37\n        }\n      }, basicInstructions), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"detail-inst-btn\",\n        onClick: this.showDetailedInstructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 37\n        }\n      }, \"Detailed Instructions\")) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"detailed-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"simple-inst-btn\",\n        onClick: this.showDetailedInstructions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 37\n        }\n      }, \"Simplified Instructions\"), recipe.analyzedInstructions.map((inst, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"step-ul\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 49\n          }\n        }, inst.steps.map((step, index) => {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            className: \"step-li\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"step-num\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 65\n            }\n          }, \"Step \", step.number), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"step-desc\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 65\n            }\n          }, \" \", step.step), step.equipment.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n            className: \"equipment-div\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 69\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"equipment-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 73\n            }\n          }, \"Equipment\"), /*#__PURE__*/React.createElement(\"ul\", {\n            className: \"equipment-ul\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 73\n            }\n          }, step.equipment.map((equipment, index) => {\n            return /*#__PURE__*/React.createElement(\"li\", {\n              className: \"equipment-li\",\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 81\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"equipment-name\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 85\n              }\n            }, equipment.name));\n          }))), step.ingredients.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ing-map-div\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 69\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"ing-map-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 73\n            }\n          }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ul\", {\n            className: \"ing-map-ul\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 73\n            }\n          }, step.ingredients.map((ing, index) => {\n            return /*#__PURE__*/React.createElement(\"li\", {\n              className: \"ing-map-li\",\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 85\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"ing-map-name\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 89\n              }\n            }, ing.name));\n          }))));\n        })));\n      }))));\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(TailSpin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 27\n      }\n    }));\n  }\n\n}\n\nexport default RecipeRender;","map":{"version":3,"sources":["/Users/sclark/Documents/Desider/desider/src/Recipe/RecipeRender.jsx"],"names":["React","Component","recipes","TailSpin","RecipeRender","constructor","props","state","data","loaded","test_data","detailsRender","detailInstructions","url","showDetailedInstructions","bind","componentDidMount","fetch","then","response","status","setState","placeholder","json","catch","console","log","prevState","render","map","recipe","index","sourceURL","sourceUrl","split","sourceName","removeSummaryLinks","summary","replace","removeSummaryTry","removeListFromInstructions","instructions","removeOLFromInstructions","removeParagraphFromInstructions","basicInstructions","title","image","vegetarian","vegan","glutenFree","dairyFree","sustainable","cheap","extendedIngredients","ing","original","analyzedInstructions","inst","steps","step","number","equipment","length","name","ingredients"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './Desktop.scss';\nimport recipes from './TestData.json';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx'\n\nclass RecipeRender extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            data: [],\n            loaded: false,\n            test_data: recipes.recipes,\n            detailsRender: false,\n            detailInstructions: false,\n            url: 'https://api.spoonacular.com/recipes/random?limitLicense=true&type=main course&number=1&apiKey=130e563e3ec24b1cb56f71b67b4ae9aa'\n\n        };\n\n        this.showDetailedInstructions = this.showDetailedInstructions.bind(this);\n\n    }\n\n    async componentDidMount() {\n\n     await fetch(this.state.url)\n        .then(response => {\n\n            if (response.status > 400) {\n\n                return this.setState(() => {\n\n                    return { placeholder: 'Something went wrong!' };\n\n                });\n\n            }\n            return response.json();\n\n        })\n        .then(data => {\n\n            this.setState(() => {\n\n                return {\n                    \n                    data: data.recipes,\n                    loaded: true\n\n                };\n\n            });\n\n        })\n        .catch(() => console.log('Something went wrong')); //TO DO: Error Page\n\n    }\n\n    showDetailedInstructions() {\n\n        this.setState(prevState => ({\n\n            detailInstructions: !prevState.detailInstructions\n\n        }));\n\n    }\n\n    render() {\n\n        return (\n\n            this.state.loaded ? \n            \n            <div className = 'render-div'>\n\n                {this.state.data.map((recipe, index) => {\n\n                    let sourceURL = recipe.sourceUrl.split('.');\n                    let sourceName = sourceURL[1];\n\n                    let removeSummaryLinks = recipe.summary.split('<a')[0].replace(/<b>/g,'').replace(/<\\/b>/g,'');\n\n                    let removeSummaryTry = removeSummaryLinks.split('Try')[0];\n\n                    let summary = removeSummaryTry.split('If you Like this recipe')[0];\n\n                    // Removes unwanted HTML from string\n                    // TODO: Create Regex to handle cases\n                    let removeListFromInstructions = recipe.instructions.replace(/<li>/g, ' ').replace(/<\\/li>/g, '');\n                    let removeOLFromInstructions = removeListFromInstructions.replace(/<ol>/g, '').replace(/<\\/ol>/g, '');\n                    let removeParagraphFromInstructions =  removeOLFromInstructions.replace(/<p>/g, '').replace(/<\\/p>/g, ' ');\n                    let basicInstructions = removeParagraphFromInstructions;\n\n                    // let basicInstructions = recipe.instructions.replace(/<li>/g, ' ').replace(/<\\/li>/g, '').replace(/<ol>/g, '').replace(/<\\/ol>/g, '');\n\n                    return(\n\n                        <div key = { index }>\n\n                            <div className = 'title'>{ recipe.title }</div>\n\n                            <div className = 'source-link'>\n\n                                <a href = { recipe.sourceUrl }>\n                                    \n                                    <button className = 'source-btn'>View on  <span className = 'source-name'> { sourceName }</span></button>\n                                    \n                                </a>\n\n                            </div>\n\n                            <div className = 'spoonacular-link'>\n\n                                <a className = 'spoon-a' href = 'https://spoonacular.com/'>\n                                    \n                                    <button className = 'spoonacular-btn'>Powered by Spoonacular</button>\n                                    \n                                </a>\n\n                            </div>\n\n                            <div className = 'image-div'>\n\n                                <img alt = { 'Picture of ' + recipe.title } src = { recipe.image } className = 'recipe-img'></img>\n\n                            </div>\n\n                            <div className = 'desc-div'>\n\n                                <div className = 'desc-title title'>Spoonacular Description</div>\n\n                                <p className = 'summary-p'>{ summary }</p>\n\n                            </div>\n\n                            <div className = 'details-div'>\n\n                                <ul className = 'details-ul'>\n\n                                    {recipe.vegetarian && <li className = 'details-li'>Vegetarian</li>}\n\n                                    {recipe.vegan && <li className = 'details-li'>Vegan</li>}\n\n                                    {recipe.glutenFree && <li className = 'details-li'>Gluten Free</li>}\n\n                                    {recipe.dairyFree && <li className = 'details-li'>Dairy Free</li>}\n\n                                    {recipe.sustainable && <li className = 'details-li'>Sustainable</li>}\n\n                                    {recipe.cheap && <li className = 'details-li'>Cheap</li>}\n\n                                </ul>\n\n                            </div>\n\n                            <div className = 'ing-div'>\n\n                                <div className = 'title'>Ingredients</div>\n\n                                <ul className = 'ing-ul'>\n\n                                    {recipe.extendedIngredients.map((ing, index) => {\n\n                                        return (\n\n                                            <li className = 'ing-li' key = { index }>\n\n                                                <div className = 'ing-name'>{ing.original}</div>\n\n                                            </li>\n\n                                        );\n\n                                    })}\n\n                                </ul>\n\n                            </div>\n\n                            <div className = 'instruction-div'>\n\n                                <div className = 'title'>Instructions</div>\n\n                                {!this.state.detailInstructions ? \n                                \n                                <div className = 'basic-div'>\n\n                                    <div className = 'basic-instructions'>\n\n                                        { basicInstructions }\n\n                                    </div>\n\n                                    <button className = 'detail-inst-btn' onClick = {this.showDetailedInstructions}>Detailed Instructions</button>\n\n                                </div>\n\n                                :\n\n                                <div className = 'detailed-div'>\n\n                                    <button className = 'simple-inst-btn' onClick = {this.showDetailedInstructions}>Simplified Instructions</button>\n\n                                    {recipe.analyzedInstructions.map((inst, index) => {\n\n                                        return (\n\n                                            <div key = { index }>\n\n                                                <ul className = 'step-ul'>\n\n                                                    {inst.steps.map((step, index) => {\n\n                                                        return (\n\n                                                            <li key = { index } className = 'step-li'>\n\n                                                                <div className = 'step-num'>Step { step.number }</div>\n\n                                                                <div className = 'step-desc'> { step.step }</div>\n\n                                                                {step.equipment.length > 0 &&\n                                                                \n                                                                    <div className = 'equipment-div'>\n\n                                                                        <div className = 'equipment-title'>Equipment</div>\n\n                                                                        <ul className = 'equipment-ul'>\n\n                                                                        {step.equipment.map((equipment, index) => {\n\n                                                                            return (\n\n                                                                                <li className = 'equipment-li' key = { index }>\n                                                                                    \n                                                                                    <div className = 'equipment-name'>{ equipment.name }</div>\n                                                                                    \n                                                                                </li>\n\n                                                                            );\n\n                                                                            })}\n\n                                                                        </ul>\n\n                                                                    </div>\n                                                                \n                                                                }\n\n                                                                {step.ingredients.length > 0 &&\n                                                                \n                                                                    <div className = 'ing-map-div'>\n\n                                                                        <div className = 'ing-map-title'>Ingredients</div>\n\n                                                                        <ul className = 'ing-map-ul'>\n\n                                                                            {step.ingredients.map((ing, index) => {\n\n                                                                                return (\n\n                                                                                    <li className = 'ing-map-li' key = { index }>\n\n                                                                                        <div className = 'ing-map-name'>{ ing.name }</div>\n\n                                                                                    </li>\n\n                                                                                );\n\n                                                                            })}\n\n                                                                        </ul>\n\n                                                                    </div>\n                                                                \n                                                                }\n\n                                                            </li>\n\n                                                        );\n\n                                                    })}\n\n                                                </ul>\n\n                                            </div>\n\n                                        )\n\n                                    })}\n\n                                </div>\n                                \n                                }\n\n                            </div>\n\n                        </div>\n\n                    );\n\n                })}\n\n            </div> : <div><TailSpin></TailSpin></div>\n\n        );   \n\n    }\n\n}\n\nexport default RecipeRender;"]},"metadata":{},"sourceType":"module"}