{"ast":null,"code":"var _jsxFileName = \"/Users/sclark/Documents/Desider/desider/src/Book/BookRender.jsx\";\nimport React, { Component } from \"react\";\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass BookRender extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loaded: false\n    };\n  }\n\n  async componentDidMount() {\n    var randomNum = Math.floor(Math.random() * 400);\n    var url = 'https://www.googleapis.com/books/v1/volumes?q=subject:fiction&maxResults=1&startIndex=' + randomNum + '&langRestrict=en&orderBy=relevance&printType=books&key=AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8';\n    await fetch(url).then(response => {\n      if (response.status > 400) {\n        this.setState({\n          placeholder: 'Something went wrong'\n        });\n      }\n\n      return response.json();\n    }).then(data => {\n      this.setState({\n        data: data.items,\n        loaded: true\n      });\n    }).catch(() => this.setState({\n      placeholder: 'Something went wrong'\n    })); //TO DO: Error Page\n  }\n\n  render() {\n    return this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"render-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, this.state.data.map((book, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: book.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, book.volumeInfo.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"author-list-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"author-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, \"Author\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"author-ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, book.volumeInfo.authors.map((author, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          className: \"author-li\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 45\n          }\n        }, author);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"publisher-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"publisher-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, \"Publisher\"), book.volumeInfo.publisher), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cover-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"cover-img\",\n        id: \"coverIMG\",\n        src: book.volumeInfo.imageLinks.thumbnail.replace('zoom=1', 'zoom=0'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"desc-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, book.volumeInfo.description)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, book.volumeInfo.averageRating && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rating-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rating-title title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 45\n        }\n      }, \"Average Rating\"), book.volumeInfo.averageRating, \" out of 5\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"prev-buy-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"prev-buy-title title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 41\n        }\n      }, \"Buy or Sample \", book.volumeInfo.title), /*#__PURE__*/React.createElement(\"a\", {\n        href: book.volumeInfo.previewLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"prev-btn btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 81\n        }\n      }, \"Preview\")), book.saleInfo.buyLink ? /*#__PURE__*/React.createElement(\"a\", {\n        href: book.saleInfo.buyLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"buy-btn btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 79\n        }\n      }, \"Buy\")) : /*#__PURE__*/React.createElement(\"a\", {\n        href: 'https://www.google.com/search?q=' + book.volumeInfo.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"buy-btn btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 118\n        }\n      }, \"Find on Google\")))));\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(TailSpin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 27\n      }\n    }));\n  }\n\n}\n\nexport default BookRender;","map":{"version":3,"sources":["/Users/sclark/Documents/Desider/desider/src/Book/BookRender.jsx"],"names":["React","Component","TailSpin","BookRender","constructor","props","state","data","loaded","componentDidMount","randomNum","Math","floor","random","url","fetch","then","response","status","setState","placeholder","json","items","catch","render","map","book","index","id","volumeInfo","title","authors","author","publisher","imageLinks","thumbnail","replace","description","averageRating","previewLink","saleInfo","buyLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx'\n\nclass BookRender extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            data: [],\n            loaded: false,\n        };\n\n    }\n\n    async componentDidMount() {\n\n        var randomNum = Math.floor(Math.random() * 400);\n        var url = 'https://www.googleapis.com/books/v1/volumes?q=subject:fiction&maxResults=1&startIndex=' + randomNum + '&langRestrict=en&orderBy=relevance&printType=books&key=AIzaSyDXwEL_zxvt-nIvezTRD9QKiDDOtn7nCg8'\n\n        await fetch(url)\n        .then(response => {\n\n            if (response.status > 400) {\n                \n                this.setState({\n\n                    placeholder: 'Something went wrong'\n\n                })\n\n            }\n            return response.json();\n\n        })\n        .then(data => {\n\n            this.setState({\n\n                data: data.items,\n                loaded: true\n\n            })\n\n        })\n        .catch(() => this.setState({ placeholder: 'Something went wrong' })); //TO DO: Error Page\n\n    }\n\n    render() {\n\n        return (\n\n            this.state.loaded ? \n            \n            <div className = 'render-div'>\n\n                {this.state.data.map((book, index) => {\n\n                    return(\n\n                        <div key = { book.id }>\n\n                            <div className = 'title'>{ book.volumeInfo.title }</div>\n\n                            <div className = 'author-list-div'>\n\n                                <div className = 'author-title'>Author</div>\n\n                                <ul className = 'author-ul'>\n\n                                    {book.volumeInfo.authors.map((author, index) => {\n\n                                        return(\n\n                                            <li key = { index } className = 'author-li'>\n\n                                                { author }\n\n                                            </li>\n\n                                        );\n\n                                    })}\n\n                                </ul>\n\n                            </div>\n\n                            <div className = 'publisher-div'>\n\n                                <div className = 'publisher-title'>Publisher</div>\n                                \n                                { book.volumeInfo.publisher }\n                                \n                            </div>\n\n                            <div className = 'cover-div'>\n\n                                <img className = 'cover-img' id = 'coverIMG' src = { book.volumeInfo.imageLinks.thumbnail.replace('zoom=1', 'zoom=0') }></img>\n\n                            </div>\n\n                            <div className = 'desc-div'>\n\n                                <div className = 'title'>Description</div>\n\n                                <div className = 'desc'>{ book.volumeInfo.description }</div>\n                                \n                            </div>\n\n                            <div className = 'details-div'>\n\n                                    \n\n                                    { book.volumeInfo.averageRating &&  \n                                    \n                                        <div className = 'rating-div'>\n\n                                            <div className = 'rating-title title'>Average Rating</div>\n\n                                            { book.volumeInfo.averageRating } out of 5\n\n                                        </div>\n                                        \n                                    }\n\n                                    <div className = 'prev-buy-div'>\n\n                                        <div className = 'prev-buy-title title'>Buy or Sample { book.volumeInfo.title }</div>\n\n                                        <a href = {book.volumeInfo.previewLink}><button className = 'prev-btn btn'>Preview</button></a>\n\n                                        {book.saleInfo.buyLink ? \n                                        \n                                            <a href = {book.saleInfo.buyLink}><button className = 'buy-btn btn'>Buy</button></a> \n                                            \n                                        : \n                                        \n                                            <a href = { 'https://www.google.com/search?q=' + book.volumeInfo.title }><button className = 'buy-btn btn'>Find on Google</button></a>\n                                            \n                                        }\n\n                                    </div>\n\n                            </div>\n\n                        </div>\n\n                    );\n\n                })}\n\n            </div> : <div><TailSpin></TailSpin></div>\n\n        );   \n\n    }\n\n}\n\nexport default BookRender;"]},"metadata":{},"sourceType":"module"}