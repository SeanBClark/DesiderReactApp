{"ast":null,"code":"var _jsxFileName = \"/Users/sclark/Documents/Desider/desider/src/Movie/MovieRender.jsx\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport DotPoint from '../Style/Icons/DotPoint.jsx';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass BookRender extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      loaded: false,\n      movie: []\n    };\n  }\n\n  async componentDidMount() {\n    var randomNum = Math.floor(Math.random() * 20);\n    var url = 'https://api.themoviedb.org/3/trending/movie/day?api_key=b28164bd1b9bf9badeb8f15b70ce1dec&page=' + randomNum;\n    await fetch(url).then(response => {\n      if (response.status > 400) {\n        this.setState({\n          placeholder: 'Something went wrong'\n        });\n      }\n\n      return response.json();\n    }).then(data => {\n      this.setState({\n        data: data.results\n      });\n    }).catch(() => this.setState({\n      placeholder: 'Something went wrong'\n    })); //TO DO: Error Page\n\n    let rand = Math.floor(Math.random() * this.state.data.length);\n    this.setState({\n      movie: this.state.movie.concat(this.state.data[rand]),\n      loaded: true\n    });\n  }\n\n  render() {\n    return this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"render-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.state.movie.map((movie, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: movie.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, movie.title), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"poster-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"poster-img\",\n        src: 'https://image.tmdb.org/t/p/w500' + movie.poster_path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"desc-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, movie.overview)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"details-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rating-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rating-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, \"Rating\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rating-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      }, movie.vote_average + ' out of 10'), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rating-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 37\n        }\n      }, movie.vote_count + ' votes cast'))));\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(TailSpin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }\n    }));\n  }\n\n}\n\nexport default BookRender;","map":{"version":3,"sources":["/Users/sclark/Documents/Desider/desider/src/Movie/MovieRender.jsx"],"names":["React","Component","render","DotPoint","TailSpin","BookRender","constructor","props","state","data","loaded","movie","componentDidMount","randomNum","Math","floor","random","url","fetch","then","response","status","setState","placeholder","json","results","catch","rand","length","concat","map","index","id","title","poster_path","overview","vote_average","vote_count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport DotPoint from '../Style/Icons/DotPoint.jsx';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx'\n\nclass BookRender extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            data: [],\n            loaded: false,\n            movie: []\n\n        };\n\n    }\n\n    async componentDidMount() {\n\n        var randomNum = Math.floor(Math.random() * 20);\n        var url = 'https://api.themoviedb.org/3/trending/movie/day?api_key=b28164bd1b9bf9badeb8f15b70ce1dec&page=' + randomNum;\n\n        await fetch(url)\n        .then(response => {\n\n            if (response.status > 400) {\n                \n                this.setState({\n\n                    placeholder: 'Something went wrong'\n\n                })\n\n            }\n            return response.json();\n\n        })\n        .then(data => {\n\n            this.setState({\n\n                data: data.results\n\n            })\n\n        })\n        .catch(() => this.setState({ placeholder: 'Something went wrong' })); //TO DO: Error Page\n\n        let rand = Math.floor(Math.random() * this.state.data.length);\n\n        this.setState({\n\n            movie: this.state.movie.concat(this.state.data[rand]),\n            loaded: true\n\n        });\n\n    }\n\n    render() {\n\n        return (\n\n            this.state.loaded ? \n            \n            <div className = 'render-div'>\n\n                {this.state.movie.map((movie, index) => {\n\n                    return(\n\n                        <div key = { movie.id }>\n\n                            <div className = 'title'>{ movie.title }</div>\n\n                            <div className = 'poster-div'>\n\n                                <img className = 'poster-img' src = {'https://image.tmdb.org/t/p/w500' + movie.poster_path}></img>\n\n                            </div>\n\n                            <div className = 'desc-div'>\n\n                                <div className = 'title'>Description</div>\n                                \n                                <div className = 'desc'>{ movie.overview }</div>\n                                \n                            </div>\n\n                            {/* <div className = 'rating'>{ movie.vote_average + ' out of 10.'}</div> */}\n\n                            <div className = 'details-div'>\n\n                                <div className = 'rating-div'>\n\n                                    <div className = 'rating-title'>\n\n                                        Rating\n\n                                    </div>\n\n                                    <div className = 'rating-details'>\n\n                                        { movie.vote_average + ' out of 10'}\n\n                                    </div>\n\n                                    <div className = 'rating-details'>\n\n                                        { movie.vote_count + ' votes cast' }\n\n                                    </div>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    );\n\n                })}\n\n            </div> : <div><TailSpin></TailSpin></div>\n\n        );   \n\n    }\n\n}\n\nexport default BookRender;"]},"metadata":{},"sourceType":"module"}