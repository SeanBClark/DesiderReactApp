{"ast":null,"code":"var _jsxFileName = \"/Users/sclark/Documents/Desider/desider/src/Restaurant/Restaurant.jsx\";\nimport React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx';\nimport MediaQuery from 'react-responsive';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass Restaurant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      placeholder: 'loading',\n      location: {\n        latitude: 0,\n        longitude: 0\n      }\n    };\n    this.success = this.success.bind(this);\n    this.error = this.success.bind(this);\n  }\n\n  async success(position) {\n    this.setState({\n      location: {\n        latitude: await position.coords.latitude,\n        longitude: await position.coords.longitude\n      },\n      loaded: true\n    });\n  }\n\n  async componentDidMount() {\n    if ('geolocation' in navigator) {\n      var options = {\n        enableHighAccuracy: true\n      };\n      navigator.geolocation.getCurrentPosition(this.success, this.error, options);\n    } else {\n      console.log('Geo Location Unavailable');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, this.state.loaded ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MediaQuery, {\n      minDeviceWidth: 1224,\n      values: {\n        deviceWidth: 1230\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Desktop, {\n      location: this.state.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MediaQuery, {\n      maxDeviceWidth: 1224,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Mobile, {\n      location: this.state.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TailSpin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 24\n      }\n    })));\n  }\n\n}\n\nexport default Restaurant;","map":{"version":3,"sources":["/Users/sclark/Documents/Desider/desider/src/Restaurant/Restaurant.jsx"],"names":["React","Component","Desktop","Mobile","MediaQuery","TailSpin","Restaurant","constructor","props","state","loaded","placeholder","location","latitude","longitude","success","bind","error","position","setState","coords","componentDidMount","navigator","options","enableHighAccuracy","geolocation","getCurrentPosition","console","log","render","deviceWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,yCAArB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAE/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAETC,MAAAA,MAAM,EAAE,KAFC;AAGTC,MAAAA,WAAW,EAAE,SAHJ;AAITC,MAAAA,QAAQ,EAAE;AAENC,QAAAA,QAAQ,EAAE,CAFJ;AAGNC,QAAAA,SAAS,EAAE;AAHL;AAJD,KAAb;AAaA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,KAAL,GAAa,KAAKF,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAb;AAEH;;AAED,QAAMD,OAAN,CAAcG,QAAd,EAAwB;AAEpB,SAAKC,QAAL,CAAc;AAEVP,MAAAA,QAAQ,EAAE;AAENC,QAAAA,QAAQ,EAAE,MAAMK,QAAQ,CAACE,MAAT,CAAgBP,QAF1B;AAGNC,QAAAA,SAAS,EAAE,MAAMI,QAAQ,CAACE,MAAT,CAAgBN;AAH3B,OAFA;AAQVJ,MAAAA,MAAM,EAAE;AARE,KAAd;AAYH;;AAED,QAAMW,iBAAN,GAA0B;AAEtB,QAAI,iBAAiBC,SAArB,EAAgC;AAE5B,UAAIC,OAAO,GAAG;AAEVC,QAAAA,kBAAkB,EAAE;AAFV,OAAd;AAMAF,MAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKX,OAA9C,EAAuD,KAAKE,KAA5D,EAAmEM,OAAnE;AAGH,KAXD,MAYK;AAEDI,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAEH;AAEJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKpB,KAAL,CAAWC,MAAX,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,UAAD;AAAY,MAAA,cAAc,EAAE,IAA5B;AAAkC,MAAA,MAAM,EAAE;AAACoB,QAAAA,WAAW,EAAE;AAAd,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAK,KAAKrB,KAAL,CAAWG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,eAQI,oBAAC,UAAD;AAAY,MAAA,cAAc,EAAE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAK,KAAKH,KAAL,CAAWG,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CARJ,CAFH,gBAkBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CApBN,CAFJ;AA8BH;;AA9F8B;;AAkGnC,eAAeN,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Desktop from './Desktop.jsx';\nimport Mobile from './Mobile.jsx'\nimport MediaQuery from 'react-responsive';\nimport TailSpin from '../Style/LoadingAnimations/TailSpin.jsx';\n\nclass Restaurant extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n            loaded: false,\n            placeholder: 'loading',\n            location: {\n\n                latitude: 0,\n                longitude: 0\n\n            }\n\n        };\n\n        this.success = this.success.bind(this);\n        this.error = this.success.bind(this);\n\n    }\n\n    async success(position) {\n\n        this.setState({\n\n            location: {\n\n                latitude: await position.coords.latitude,\n                longitude: await position.coords.longitude\n\n            },\n            loaded: true\n\n        });\n\n    }\n\n    async componentDidMount() {\n\n        if ('geolocation' in navigator) {\n\n            var options = {\n\n                enableHighAccuracy: true\n\n            }\n\n            navigator.geolocation.getCurrentPosition(this.success, this.error, options);\n            \n\n        }\n        else {\n\n            console.log('Geo Location Unavailable');\n\n        }\n\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                {this.state.loaded ? \n                \n                    <div>\n\n                        <MediaQuery minDeviceWidth={1224} values={{deviceWidth: 1230}}>\n\n                            <Desktop location = { this.state.location }/>\n                                    \n                        </MediaQuery>\n\n                        <MediaQuery maxDeviceWidth={1224}>\n\n                            <Mobile location = { this.state.location } />\n\n                        </MediaQuery>\n\n                    </div>\n\n                : <div><TailSpin /></div>\n                \n                }\n\n            </div>\n\n        );   \n\n    }\n\n}\n\nexport default Restaurant;"]},"metadata":{},"sourceType":"module"}